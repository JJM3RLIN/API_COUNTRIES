[{"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\country\\[id].js":"1","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\index.js":"2","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\_app.js":"3","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Border.js":"4","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Borders.js":"5","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\ContenedorCountry.js":"6","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Filtros.js":"7","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Layout.js":"8"},{"size":3651,"mtime":1659566696191,"results":"9","hashOfConfig":"10"},{"size":2033,"mtime":1659564098146,"results":"11","hashOfConfig":"10"},{"size":140,"mtime":1659549416270,"results":"12","hashOfConfig":"10"},{"size":116,"mtime":1659563145074,"results":"13","hashOfConfig":"10"},{"size":402,"mtime":1659394075603,"results":"14","hashOfConfig":"10"},{"size":929,"mtime":1659563957569,"results":"15","hashOfConfig":"10"},{"size":1226,"mtime":1659565780084,"results":"16","hashOfConfig":"10"},{"size":1466,"mtime":1659563089594,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njghnl",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\country\\[id].js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\index.js",["44"],[],"/* MADE IT BY M3RLIN */\nimport { useEffect, useState } from 'react';\nimport Layout from '../components/Layout';\nimport Filtros from '../components/Filtros';\nimport ContenedorCountry from '../components/ContenedorCountry';\nimport styles from '../styles/Home.module.scss'\n\nexport default function Home({countries}) {\n     //Filtros\n const [filterName, setFilterName] = useState('');\n const [filterRegion, setFilterRegion] = useState('');\n  //Arreglo que contendra los paÃ­ses filtrados\n const [paisesFiltrados, setPaisesFiltrados] = useState([]);\n  useEffect(()=>{\n    let filtrados = [];\n    if(filterName !== '' && filterRegion !== ''){\n      filtrados = countries.filter(country=>{\n        if(country.name.common.toLowerCase().includes(filterName) && country.region === filterRegion){\n          return country;\n        }\n      } );\n    }\n    else if(filterName !== ''){\n      filtrados = countries.filter(country=>{\n        if(country.name.common.toLowerCase().includes(filterName) ){\n          return country;\n        }\n      } );\n    }\n   else if(filterRegion !== ''){\n      filtrados = countries.filter(country=>country.region === filterRegion );\n    }\n \n   setPaisesFiltrados(filtrados);\n  }, [filterName, filterRegion])\n  return (\n    <Layout titulo='Home'>\n    <Filtros setFilterName={setFilterName} setFilterRegion={setFilterRegion} />\n   <div className={styles.listado}>\n    {\n      filterName !== '' || filterRegion !== '' ?\n      paisesFiltrados.length === 0 ? <p>That county doesn&apos;t exist</p> :\n      paisesFiltrados.map(country =>(\n        <ContenedorCountry key={country.name.official} country={country} />\n      ))\n\n      :\n      countries.map(country =>(\n        <ContenedorCountry key={country.name.official} country={country} />\n      ))\n    }\n   </div>\n    </Layout>\n  )\n}\nexport async function getServerSideProps(){\n\n    const url = \"https://restcountries.com/v3.1/all\";\n    const respuesta = await fetch(url);\n    const countries = await respuesta.json();\n\n  return {\n    props:{\n      countries\n    }\n  }\n}","C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\pages\\_app.js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Border.js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Borders.js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\ContenedorCountry.js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Filtros.js",[],[],"C:\\Users\\georg\\OneDrive\\Escritorio\\api-countries\\components\\Layout.js",["45"],[],"import Head from \"next/head\";\r\nimport activarDarkMode from \"../helpers/ActivarDarkMode\";\r\nimport styles from '../styles/Layout.module.scss';\r\nconst Layout = ({titulo, children, icono}) => {\r\n  return (\r\n    <>\r\n    <Head>\r\n        <title>Countries | {titulo}</title>\r\n        <link rel=\"icon\" href={icono ? icono : \"/favicon.ico\"} />\r\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n        <link rel=\"preconnect\" crossOrigin  href=\"https://fonts.gstatic.com\"/>\r\n        <link href=\"https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;600;800&display=swap\" rel=\"stylesheet\" />\r\n      </Head>\r\n    <header className={`${styles.header} mode`}>\r\n\r\n      <div className={styles.contenidoHeader}>\r\n        <h1>Where in the world?</h1>\r\n        <button onClick={activarDarkMode} className={styles.darkModeBtn}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\"  className={`${styles.biDarkMode} biDark`} viewBox=\"0 0 16 16\">\r\n          <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z\"/>\r\n        </svg>\r\n          <span>Dark Mode</span>\r\n        </button>\r\n      </div>\r\n    </header>\r\n\r\n  <main className='contenedor'>\r\n   {children}\r\n  </main>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout",{"ruleId":"46","severity":1,"message":"47","line":35,"column":6,"nodeType":"48","endLine":35,"endColumn":32,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":12,"column":9,"nodeType":"52","endLine":12,"endColumn":124},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countries'. Either include it or remove the dependency array.","ArrayExpression",["53"],"@next/next/no-page-custom-font","Custom fonts not added in `pages/_document.js` will only load for a single page. This is discouraged. See: https://nextjs.org/docs/messages/no-page-custom-font","JSXOpeningElement",{"desc":"54","fix":"55"},"Update the dependencies array to be: [countries, filterName, filterRegion]",{"range":"56","text":"57"},[1197,1223],"[countries, filterName, filterRegion]"]